version: '3'
services:
  _disabled: &disabled
    image: hello-world
    profiles:
      - disabled
    #volumes:
    #- ./config.hcl:/usr/share/chronicle-suite/config.hcl
    #- ./config-contract-params.hcl:/usr/share/chronicle-suite/config-contract-params.hcl
    #- ./config-contracts.hcl:/usr/share/chronicle-suite/config-contracts.hcl
    #- ./config-contracts-median.hcl:/usr/share/chronicle-suite/config-contracts-median.hcl
    #- ./config-defaults.hcl:/usr/share/chronicle-suite/config-defaults.hcl
    #- ./config-ethereum.hcl:/usr/share/chronicle-suite/config-ethereum.hcl
    #- ./config-ghost.hcl:/usr/share/chronicle-suite/config-ghost.hcl
    #- ./config-gofer.hcl:/usr/share/chronicle-suite/config-gofer.hcl
    #- ./config-spectre.hcl:/usr/share/chronicle-suite/config-spectre.hcl
    #- ./config-spire.hcl:/usr/share/chronicle-suite/config-spire.hcl
    #- ./config-transport.hcl:/usr/share/chronicle-suite/config-transport.hcl
    #command:
    #- run
    #- -v
    #- debug
  _base:
    <<: *disabled
    environment: &base

      CFG_ENVIRONMENT: "stage"

      CFG_FEEDS: |-
        ${ETH_FROM_A}
        ${ETH_FROM_B}
        ${ETH_FROM_C}
        ${ETH_FROM_D}

      CFG_ETH_PASS: ""

      CFG_LIBP2P_BOOTSTRAP_ADDRS: |-
        /dns/bootstrap/tcp/8000/p2p/12D3KooWJgSBDkfdkoXNBBS91uaM1FRE4GowChEgr4SWDKEz75Rq

  _base_ghost:
    <<: *disabled
    environment: &base_ghost
      <<: *base

      # ethereum RPC client
      CFG_ETH_RPC_URLS: ${RPCS}
      CFG_ETH_CHAIN_ID: ${CHID}

      # default RPC client
      CFG_CHAIN_RPC_URLS: ${SEP_RPCS}
      CFG_CHAIN_ID: ${SEP_CHID}
      CFG_CHAIN_NAME: "sep"

      # webapi
      CFG_WEBAPI_ENABLE: 1
      ## receiving
      CFG_WEBAPI_LISTEN_ADDR: "" # disable incoming connections
      ## sending
      CFG_WEBAPI_SOCKS5_PROXY_ADDR: tor-proxy:9050
      ### on-chain address book
      #CFG_WEBAPI_ETH_ADDR_BOOK: "0x504Fdbc4a9386c2C48A5775a6967beB00dAa9E9a" # feeds + relays
      ### local address book
      CFG_WEBAPI_STATIC_ADDR_BOOK: ""

      CFG_LIBP2P_EXTERNAL_ADDR: "/dns/www.example.com"
  _base_spectre:
    <<: *disabled
    environment: &base_spectre
      <<: *base

      # default RPC client
      CFG_CHAIN_NAME: "sep"
      CFG_CHAIN_GAS_FEE_MULTIPLIER: 1
      CFG_CHAIN_GAS_PRIORITY_FEE_MULTIPLIER: 1
      CFG_CHAIN_MAX_GAS_FEE: 0
      CFG_CHAIN_MAX_GAS_PRIORITY_FEE: 0
      CFG_CHAIN_MAX_GAS_LIMIT: 0

      # webapi
      CFG_WEBAPI_ENABLE: 1
      ## receiving
      CFG_WEBAPI_LISTEN_ADDR: ":8080"
      ## sending
      CFG_WEBAPI_SOCKS5_PROXY_ADDR: "" # disable proxy
      ### on-chain address book
      CFG_WEBAPI_ETH_ADDR_BOOK: ""
      ### local address book
      CFG_WEBAPI_STATIC_ADDR_BOOK: ""

  bootstrap:
    hostname: "bootstrap.local"
    image: ghcr.io/chronicleprotocol/spire:0.0.0-dev.0
    command:
      - "bootstrap"
    environment:
      <<: *base

      # libp2p
      CFG_LIBP2P_PK_SEED: ${SEED}
      ## Consider using this to connect bootstrap nodes to each other
      #CFG_LIBP2P_DIRECT_PEERS_ADDRS: "/ip4/.../"
      CFG_LIBP2P_BOOTSTRAP_ADDRS: "" # ?? or maybe it should be configured here?

  spire:
    image: ghcr.io/chronicleprotocol/spire:0.0.0-dev.0
    command:
      - "stream"
      #- "data_point/v1"
      - "greet/v1"
      - "musig_signature/v1"
    environment:
      <<: *base

      # webapi
      CFG_WEBAPI_ENABLE: 1
      ## receiving
      CFG_WEBAPI_LISTEN_ADDR: ":8080"
      ## sending
      CFG_WEBAPI_SOCKS5_PROXY_ADDR: "" # disable proxy
      ### on-chain address book
      CFG_WEBAPI_ETH_ADDR_BOOK: ""
      ### local address book
      CFG_WEBAPI_STATIC_ADDR_BOOK: ""

      CFG_CHAIN_NAME: "sep"

  ghost1:
    image: ghcr.io/chronicleprotocol/ghost:0.0.0-dev.0
    environment:
      <<: *base_ghost

      # default ETH key
      CFG_ETH_FROM: ${ETH_FROM_A}
      CFG_ETH_KEYS: ${ETH_KEYS_A}

  ghost2:
    image: ghcr.io/chronicleprotocol/ghost:0.0.0-dev.0
    environment:
      <<: *base_ghost

      # default ETH key
      CFG_ETH_FROM: ${ETH_FROM_B}
      CFG_ETH_KEYS: ${ETH_KEYS_B}

  ghost3:
    image: ghcr.io/chronicleprotocol/ghost:0.0.0-dev.0
    environment:
      <<: *base_ghost

      # default ETH key
      CFG_ETH_FROM: ${ETH_FROM_C}
      CFG_ETH_KEYS: ${ETH_KEYS_C}

  ghost4:
    image: ghcr.io/chronicleprotocol/ghost:0.0.0-dev.0
    environment:
      <<: *base_ghost

      # default ETH key
      CFG_ETH_FROM: ${ETH_FROM_D}
      CFG_ETH_KEYS: ${ETH_KEYS_D}

  spectre1:
    image: ghcr.io/chronicleprotocol/spectre:0.0.0-dev.0
    environment:
      <<: *base_spectre

      CFG_CHAIN_NAME: gor

      # default RPC client
      CFG_CHAIN_RPC_URLS: ${ETH_RPCS}
      CFG_CHAIN_ID: ${ETH_CHID}

  spectre2:
    image: ghcr.io/chronicleprotocol/spectre:0.0.0-dev.0
    environment:
      <<: *base_spectre

      CFG_CHAIN_NAME: ogor

      # default RPC client
      CFG_CHAIN_RPC_URLS: ${OPT_RPCS}
      CFG_CHAIN_ID: ${OPT_CHID}

  spectre3:
    image: ghcr.io/chronicleprotocol/spectre:0.0.0-dev.0
    environment:
      <<: *base_spectre

      CFG_CHAIN_NAME: arb-goerli

      # default RPC client
      CFG_CHAIN_RPC_URLS: ${ARB_RPCS}
      CFG_CHAIN_ID: ${ARB_CHID}

  spectre4:
    image: ghcr.io/chronicleprotocol/spectre:0.0.0-dev.0
    environment:
      <<: *base_spectre

      CFG_CHAIN_NAME: sep

      # default RPC client
      CFG_CHAIN_RPC_URLS: ${SEP_RPCS}
      CFG_CHAIN_ID: ${SEP_CHID}
